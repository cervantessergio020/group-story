a. why did you branch prior to making changes?
So it didnt mess up the main branch. making a branch let me add my part without affecting the original file

b. what is git status? what is the diff. between git status  before and after commit?
git status shows you what changed and before commit it tells you what fies have been changes and what is going on in the working directory. When you do it after commit it tells you eveythging is cleam

c. How do you rsolev the merge conflcit in steo 5 from question 1?
WHen i opend the file in vscode and saw the conflict i clicked accceot both changes and than i saved it so both version of the seocnd line were included and commited it to finishe the merge. 








#1. Explain what this command does?
this command shows a simple visual graph of commits. it helps you see the merges, branches, and the order of changes in the project.

#2. The graph shows my branch `add-sergio-part` w/a merge commit at the top. below that is the "teammateâ€™s change" on `main` and my own edit. The bottom shows where everything started from the initial file creation


sergiocervantes@Mac group-story % git log --oneline --decorate --graph --parents

*   5457465 8945169 b12451e (HEAD -> add-sergio-part) Resolved merge conflict in story.md
|\  
| * b12451e d779e92 (origin/main, origin/HEAD, main) added new line to simulate teammate change
* | 8945169 d779e92 added twist to story
|/  
* d779e92 e25de64 Create story.md
* e25de64 Initial commit
sergiocervantes@Mac group-story % 
